// -------- express와 path모듈을 불러온다.----------------------------------------------------------
const express = require("express");
const path = require("path");
const multer = require("multer");
const session = require("express-session");
//-------------------------------------------------------------------------------------------------

//--------- 서버 인스턴스 생성 ---------------------------------------------------------------------
const app = express();
//-------------------------------------------------------------------------------------------------

//--------- view엔진으로 보여줄 파일들의 경로를 설정한다. -------------------------------------------
    // view엔진 경로의 기본값은 "views: 'D:\\경일_블록체인\\Github\\project\\Individual\\Nodejs-toyProject\\views'"이지만,
    // 아래의 구문으로 "views: 'D:\\경일_블록체인\\Github\\project\\Individual\\Nodejs-toyProject\\page'"으로 변경된다.
    // 따라서 보여줄 페이지의 경로는 page폴더 안에 있으며, 경로를 기입할 때 파일명만 기입하면 된다.
app.set("views", path.join(__dirname, "page"));

// console.log(app);

// view 엔진으로 ejs를 사용할 수 있게 설정한다.
app.set("view engine", "ejs")
//-------------------------------------------------------------------------------------------------

//--------- POST 요청 시, input의 value값을 전달하기 위한 미들웨어 추가 -----------------------------
    // 무슨 구문인가? => 요청의 본문에 있는 데이터를 해석해서 req.body 객체로 만들어주는 미들웨어이다.
    // 왜 사용하나? => 요청의 본문에 있는 데이터가 URL-encoded 형식의 문자열로 넘어오기 때문에 객체로의 변환이 필요하기 때문
                    // JSON 문자열로 넘어오는 경우, ' express.json() ' 미들웨어로 사용한다.
    // 서버에 ' express.urlencoded '를 설정하는 방법이다.
app.use(express.urlencoded({extended : false}));
//-------------------------------------------------------------------------------------------------

//--------- 정적파일에 대한 기본경로 설정을 위한 미들웨어 추가 --------------------------------------
    // 무슨 구문인가? => html, css, js, 이미지 등 정적 파일에 대한 기본 경로를 제공해준다.
    // 왜 사용하나? => 로컬환경에서 html파일을 브라우저로 실행했을 경우에는 정상적으로 동작하지만, nodejs로 구동하면 동작하지 않는다.
                    // 이는 로컬환경에서의 정적파일의 상대경로와, nodejs의 상대경로가 다르기 때문이다.
                    // 이를 해결하기 위해 ' express.static() ' 미들웨어를 사용해 정적 폴더를 지정하여 서버에서 정적 폴더에 접근해 파일을 가져올 수 있도록한다.
    // express.static() 메서드의 인자로 정적 파일이 담겨있는 폴더를 지정준다.
        // 실제 폴더 경로에는 해당 인자의 값이 존재하지만, 요청주소에는 들어있지 않아도 호출이 가능해진다.
    // 첫 번째 매개변수로 경로를 지정하지 않았을 경우에는 기본적으로 ' /(루트경로) ' 로 지정한다.
    app.use("/css",express.static(path.join(__dirname,"public")));
    app.use("/image",express.static(path.join(__dirname,"upload")));
//-------------------------------------------------------------------------------------------------

//--------- 라우터 설정  -----------------------------------------------------------------------------
const listRoute = require("./routes/router");
// const tokenRouter = require("./routes/token");
const verifyRouter = require("./routes/verify");

app.use(session({
    secret : process.env.SESSION_KEY,
    resave : false,
    saveUninitialized : false
}));

app.use("/list", listRoute);
// app.use(tokenRouter);
app.use("/userVerify", verifyRouter);



//--------- 서버 대기  -----------------------------------------------------------------------------
app.listen(4545, ()=>{
    console.log("서버 잘 열렸음!")
})
//-------------------------------------------------------------------------------------------------

